[DEFAULT]
#bind_ip = 127.0.0.1
bind_port = 8080
workers = 1
#user = mjwtom
user = mjwtom
eventlet_debug = true

deduplication = true
#fixed_chunk= true
chunk_size = 8192
dedupe_container_size=4096
#sqlite_index = true
disk_hash_table_index_size = 1024
disk_hash_table_flush_size = 1024
clean_container_fp = true
clean_disk_hash = true
lazy_bucket_size = 4
#lazy_dedupe = false

#dedupe_container_fp_dir = /extra-ssd/swift/container_fp
#disk_hash_table_dir = /extra-ssd/swift/hash_index

dedupe_container_fp_dir = /home/mjwtom/index/swift/container_fp
disk_hash_table_dir = //home/mjwtom/index/swift/hash_index

mylog=/home/mjwtom/deduplication.txt

#disk_hash_table_directio = true
#load_fp_directio = true

dedupe_log_udp_host = 220.113.20.30
dedupe_log_udp_port = 514
dedupe_log_facility = LOG_LOCAL5

log_udp_host = 220.113.20.30
log_udp_port = 514
log_facility = LOG_LOCAL1


[pipeline:main]
# Yes, proxy-logging appears twice. This is so that
# middleware-originated requests get logged too.
pipeline = catch_errors gatekeeper healthcheck xprofile proxy-logging cache bulk tempurl ratelimit crossdomain container_sync tempauth staticweb container-quotas account-quotas slo dlo versioned_writes proxy-logging proxy-server


[filter:xprofile]
use = egg:swift#xprofile
# This option enable you to switch profilers which should inherit from python
# standard profiler. Currently the supported value can be 'cProfile',
# 'eventlet.green.profile' etc.
# profile_module = eventlet.green.profile
#
# This prefix will be used to combine process ID and timestamp to name the
# profile data file.  Make sure the executing user has permission to write
# into this path (missing path segments will be created, if necessary).
# If you enable profiling in more than one type of daemon, you must override
# it with an unique value like: /var/log/swift/profile/proxy.profile
log_filename_prefix = /home/mjwtom/default.profile
#
# the profile data will be dumped to local disk based on above naming rule
# in this interval.
dump_interval = 5.0
#
# Be careful, this option will enable profiler to dump data into the file with
# time stamp which means there will be lots of files piled up in the directory.
# dump_timestamp = false
#
# This is the path of the URL to access the mini web UI.
path = /__profile__
#
# Clear the data when the wsgi server shutdown.
# flush_at_shutdown = false
#
# unwind the iterator of applications
# unwind = false

[filter:catch_errors]
use = egg:swift#catch_errors
#paste.app.filter_factory = swift.common.middleware.catch_errors:filter_factory

[filter:healthcheck]
use = egg:swift#healthcheck
#paste.app.filter_factory = swift.common.middleware.healthcheck:filter_factory

[filter:proxy-logging]
use = egg:swift#proxy_logging
#paste.app.filter_factory = swift.common.middleware.proxy_logging:filter_factory

[filter:bulk]
use = egg:swift#bulk
#paste.app.filter_factory = swift.common.middleware.bulk:filter_factory

[filter:ratelimit]
use = egg:swift#ratelimit
#paste.app.filter_factory = swift.common.middleware.ratelimit:filter_factory

[filter:crossdomain]
use = egg:swift#crossdomain
#paste.app.filter_factory = swift.common.middleware.crossdomain:filter_factory

[filter:dlo]
use = egg:swift#dlo
#paste.app.filter_factory = swift.common.middleware.dlo:filter_factory

[filter:slo]
use = egg:swift#slo
#paste.app.filter_factory = swift.common.middleware.slo:filter_factory

[filter:container_sync]
use = egg:swift#container_sync
#paste.app.filter_factory = swift.common.middleware.container_sync:filter_factory
current = //saio/saio_endpoint

[filter:tempurl]
use = egg:swift#tempurl
#paste.app.filter_factory = swift.common.middleware.tempurl:filter_factory

[filter:tempauth]
use = egg:swift#tempauth
#paste.app.filter_factory = swift.common.middleware.tempauth:filter_factory
user_admin_admin = admin .admin .reseller_admin
user_test_tester = testing .admin
user_test2_tester2 = testing2 .admin
user_test_tester3 = testing3

[filter:staticweb]
use:egg:swift#staticweb
#paste.app.filter_factory = swift.common.middleware.staticweb:filter_factory

[filter:account-quotas]
use = egg:swift#account_quotas
#paste.app.filter_factory = swift.common.middleware.account_quotas:filter_factory

[filter:container-quotas]
use = egg:swift#container_quotas
#paste.app.filter_factory = swift.common.middleware.container_quotas:filter_factory

[filter:cache]
use = egg:swift#memcache
#paste.app.filter_factory = swift.common.middleware.memcache:filter_factory

[filter:gatekeeper]
use = egg:swift#gatekeeper
#paste.app.filter_factory = swift.common.middleware.gatekeeper:filter_factory

[filter:versioned_writes]
use = egg:swift#versioned_writes
#paste.app.filter_factory = swift.common.middleware.versioned_writes:filter_factory
allow_versioned_writes = true

[app:proxy-server]
use = egg:swift#proxy
#paste.app.app_factory = swift.proxy.server:app_factory
allow_account_management = true
account_autocreate = true
